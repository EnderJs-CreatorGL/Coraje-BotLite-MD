//Codigo hecho por ivan 

import fetch from 'node-fetch';

let handler = async (m, { conn, args, usedPrefix, command }) => {
    // Comprobamos si no se ha pasado el c√≥digo de pa√≠s
    if (!args[0]) return conn.reply(m.chat, `üö© Ingrese el c√≥digo de pa√≠s. Ejemplo:\n> *${usedPrefix + command}* +58`, m, rcanal);

    await m.react('üïì');
    try {
        // Llamamos a la API para obtener la informaci√≥n del pa√≠s
        const response = await fetch(`https://api.dorratz.com/v2/pais/${args[0]}`);
        if (!response.ok) throw new Error('Error al obtener datos');

        // Procesamos JSON
        const data = await response.json();

        // Creamos el mensaje con la informaci√≥n del pa√≠s
        let txt = '`‰πÇ  I N F O R M A C I √ì N  -  P A √ç S`\n\n'
        txt += `  ‚ú©   *Nombre* : ${data.nombre}\n`;
        txt += `  ‚ú©   *C√≥digo* : ${data.c√≥digo}\n`;
        txt += `  ‚ú©   *Bandera* : ${data.bandera}\n`;
        txt += `  ‚ú©   *Capital* : ${data.capital}\n`;
        txt += `  ‚ú©   *Moneda* : ${data.moneda}\n`;
        txt += `  ‚ú©   *Continente* : ${data.continente}\n`;
        txt += `  ‚ú©   *Poblaci√≥n* : ${data.poblaci√≥n}\n`;
        txt += `  ‚ú©   *√Årea* : ${data.√°rea} km¬≤\n`;
        txt += `  ‚ú©   *Idioma Oficial* : ${data.idioma_oficial}\n`;
        txt += `  ‚ú©   *C√≥digo ISO* : ${data.c√≥digo_iso}\n`;
        txt += `  ‚ú©   *Regi√≥n* : ${data.regi√≥n}\n`;
        txt += `  ‚ú©   *Fiesta Nacional* : ${data.fiestanacional}\n`;
        txt += `  ‚ú©   *Clima* : ${data.clima}\n`;
        txt += `  ‚ú©   *Recursos Naturales* : ${data.recursos_naturales}\n`;
        txt += `  ‚ú©   *Econom√≠a* : ${data.econom√≠a}\n`;
        txt += `  ‚ú©   *Exportaciones* : ${data.exportaciones}\n`;
        txt += `  ‚ú©   *Importaciones* : ${data.importaciones}\n`;
        txt += `  ‚ú©   *Turismo* : ${data.turismo}\n`;
        txt += `  ‚ú©   *Himno Nacional* : ${data.himno_nacional}\n`;
        txt += `  ‚ú©   *Mitos y Leyendas* : ${data.mitos_leyendas}\n`;
        txt += `  ‚ú©   *Gastronom√≠a* : ${data.gastronom√≠a}\n`;

        // Enviamos el mensaje al chat
        await conn.reply(m.chat, txt, m, rcanal);
        await m.react('‚úÖ');
    } catch (error) {
        await m.react('‚úñÔ∏è');
        conn.reply(m.chat, `‚ö†Ô∏è Error: ${error.message}`, m);
    }
};

handler.help = ['infonumber *<c√≥digo pa√≠s>*'];
handler.tags = ['informaci√≥n'];
handler.command = ['infonumber']; // Aqu√≠ puedes agregar otros comandos si lo deseas
handler.register = true;

export default handler;